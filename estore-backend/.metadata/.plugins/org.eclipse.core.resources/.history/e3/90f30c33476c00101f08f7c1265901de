package com.estore.productservice.config;

import java.nio.file.Paths;

import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

import jakarta.annotation.PostConstruct;

@Configuration
public class WebConfig implements WebMvcConfigurer {

	@PostConstruct
	public void init() {
		System.out.println(">> Product image folder exposed at: " + Paths.get("product-images").toAbsolutePath());
	}
	
	@Override
	public void addResourceHandlers(ResourceHandlerRegistry registry) {
		registry.addResourceHandler("/product-images/**")
			.addResourceLocations("file:" + Paths.get("product-images").toAbsolutePath().toString() + "/");
	}
	
	/*
	 * @Override public void addCorsMappings(CorsRegistry registry) { // This is
	 * very important for image loading registry.addMapping("/product-images/**")
	 * .allowedOrigins("*") // You can specify http://localhost:3001 instead of *
	 * .allowedMethods("GET"); }
	 */
	
	 @Override
	    public void addCorsMappings(CorsRegistry registry) {
	        registry.addMapping("/product-images/**")
	                .allowedOrigins("http://localhost:3000")  // React app origin
	                .allowedMethods("GET", "POST", "PUT", "DELETE")
	                .allowedHeaders("*")
	                .allowCredentials(true);
	    }

}

